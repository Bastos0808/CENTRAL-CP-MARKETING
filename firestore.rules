
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user document
      // Authenticated users can read their own document
      allow read: if isAdmin() || request.auth.uid == userId;
      // Only authenticated users can create their own user document
      allow create: if request.auth.uid == userId;
      // Users can only update their own document
      allow update: if request.auth.uid == userId;
    }

    // Rules for client data
    match /clients/{clientId} {
      // Allow read and write for any authenticated user
      allow read, write: if request.auth != null;
    }

    // Rules for SDR performance data
    match /sdr_performance/{sdrId} {
        // Admins can read any SDR's performance data
        // An SDR can read and write to their own performance document
        allow read, write: if isAdmin() || request.auth.uid == sdrId;
    }

    // Rules for the podcast schedule
    match /podcast_schedule/{episodeId} {
      // Allow read and write for any authenticated user for now
      allow read, write: if request.auth != null;
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
